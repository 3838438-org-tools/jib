substitutions:
  _GCS_CACHE_BUCKET: <your bucket>
  _IMAGE_NAME: my-image

steps:

# First, loads the cached files from GCS if they exist.
- waitFor:
  - '-'
  name: gcr.io/cloud-builders/gsutil
  dir: /builder/home
  entrypoint: /bin/bash
  args:
  - -c
  - |
    mkdir /builder/home/.m2 &&
    (
      gsutil cp gs://${_GCS_CACHE_BUCKET}/m2-cache.tar.gz /builder/home/m2-cache.tar.gz &&
      tar -xzf m2-cache.tar.gz
    ) || echo 'Cache not found'
- waitFor:
  - '-'
  name: gcr.io/cloud-builders/gsutil
  dir: /builder/home
  entrypoint: /bin/bash
  args:
  - -c
  - |
    mkdir /builder/home/.cache &&
    (
      gsutil cp gs://${_GCS_CACHE_BUCKET}/jib-cache.tar.gz /builder/home/jib-cache.tar.gz &&
      tar -xzf jib-cache.tar.gz
    ) || echo 'Cache not found'

# Runs the Jib build.
- id: jib-build
  name: gcr.io/cloud-builders/mvn
  args:
  - compile
  - com.google.cloud.tools:jib-maven-plugin:build
  - -Duser.home=/builder/home
  - -Dimage=gcr.io/${PROJECT_ID}/${_IMAGE_NAME}

# Saves the files to the GCS cache.
- waitFor:
  - jib-build
  name: gcr.io/cloud-builders/gsutil
  dir: /builder/home
  entrypoint: /bin/bash
  # Caches the local Maven repository.
  args:
  - -c
  - |
    tar -czf m2-cache.tar.gz .m2 &&
    gsutil cp m2-cache.tar.gz gs://${_GCS_CACHE_BUCKET}/m2-cache.tar.gz
- waitFor:
  - jib-build
  name: gcr.io/cloud-builders/gsutil
  dir: /builder/home
  entrypoint: /bin/bash
  # Caches the Jib cache.
  args:
  - -c
  - |
    tar -czf jib-cache.tar.gz .cache &&
    gsutil cp jib-cache.tar.gz gs://${_GCS_CACHE_BUCKET}/jib-cache.tar.gz
